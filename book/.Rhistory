tidy_content_rel %>%
count(bigram, sort = TRUE) %>%
filter(n > 2000) %>%
mutate(bigram = reorder(bigram, n)) %>%
ggplot(aes(n, bigram)) +
geom_col() +
labs(y = NULL)
library(tidyr)
bigrams_separated <- tidy_content_rel %>%
separate(bigram, c("word1", "word2"), sep = " ")
bigrams_filtered <- bigrams_separated %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word)
bigrams_united <- bigrams_filtered %>%
unite(bigram, word1, word2, sep = " ")
bigrams_united %>%
count(bigram, sort = TRUE) %>%
filter(n > 500) %>%
mutate(bigram = reorder(bigram, n)) %>%
ggplot(aes(n, bigram)) +
geom_col() +
labs(y = NULL)
View(issue_tf_idf)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
issue_tf_idf <- issue_total_words %>%
mutate(issue=as.character(issue)) %>%
bind_tf_idf(word, issue, n)
issue_tf_idf
issue_tf_idf %>%
select(-total) %>%
arrange(desc(tf_idf))
issue_tf_idf <- issue_total_words %>%
mutate(issue=as.character(issue)) %>%
bind_tf_idf(word, issue, n)
issue_tf_idf
issue_tf_idf %>%
arrange(desc(tf_idf))
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 7) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 5) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 5) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales = "free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, nrow=4, scales = "free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, nrow=4, scales = "free") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, nrow=4, scales = "free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales="free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, ncol = 2, scales="free_y") +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y", ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y", space="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y", space="free",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(margin = margin(r = 10)))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(margin = margin(r = 10)))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(margin = margin(r = 20)))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(margin = margin(r = 100)))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(margin = margin(r = 100)))  # Adjust the margin between y-axis tick values
issue_tf_idf %>%
arrange(desc(tf_idf))
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(margin = margin(r = 1000)))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(size = 8))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(size = 20))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(size = 50))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(size = 50))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(size = 100))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL) +
theme(strip.text.y = element_text(size = 1))  # Adjust the margin between y-axis tick values
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="y_free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 10000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 100000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 50000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free_y",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 50000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
issue_tf_idf %>%
filter(total > 50000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
bigram_tf_idf <- bigrams_united %>%
count(issue, bigram) %>%
bind_tf_idf(bigram, issue, n) %>%
arrange(desc(tf_idf))
library(readr)
data_file_name <- '../data/times_ocr=80_100&date=1945-01-01_2010-12-31&query=_european_union_&category=News.csv'
data_df <- read_delim(data_file_name, delim = ";", escape_double = FALSE, col_types = cols(`date-pub` = col_date(format = "%B %d, %Y")), trim_ws = TRUE)
print(colnames(data_df))
library(tidyverse)
library(tidytext)
tidy_content <- data_df %>% unnest_tokens(word, content)
data(stop_words)
tidy_clean_content <- tidy_content %>% anti_join(stop_words)
bigram_tf_idf <- bigrams_united %>%
count(issue, bigram) %>%
bind_tf_idf(bigram, issue, n) %>%
arrange(desc(tf_idf))
bigram_tf_idf
bigram_tf_idf <- bigrams_united %>%
count(issue, bigram) %>%
bind_tf_idf(bigram, issue, n) %>%
arrange(tf_idf)
bigram_tf_idf
bigram_tf_idf <- bigrams_united %>%
count(issue, bigram) %>%
bind_tf_idf(bigram, issue, n) %>%
arrange(idf)
bigram_tf_idf
library(forcats)
bigrams_tf_idf %>%
filter(total > 50000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(biagram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
bigram_tf_idf %>%
filter(total > 50000) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(biagram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
View(bigram_tf_idf)
library(forcats)
bigram_tf_idf %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(biagram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
bigram_tf_idf %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
library(forcats)
bigram_tf_idf %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2)
library(forcats)
bigram_tf_idf %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
View(issue_tf_idf)
View(issue_tf_idf)
library(forcats)
bigram_tf_idf %>%
arrange(desc(tf_idf)) %>%
group_by(issue) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = issue)) +
geom_col(show.legend = FALSE) +
facet_wrap(~issue, scales="free",ncol = 2) +
labs(x = "tf-idf", y = NULL)
View(issue_words)
View(issue_words)
View(total_words)
View(total_words)
test <- issue_words %>%
group_by(issue)
View(test)
View(test)
View(issue_total_words)
View(issue_total_words)
library(ggplot2)
unique_issues <- issue_total_words %>% filter(total>10000) %>% distinct(issue)
first_6_unique_issues <- unique_issues %>% slice(1:6)
issue_total_words %>% semi_join(first_6_unique_issues, by="issue") %>%
mutate(issue=as.character(issue)) %>%
ggplot(aes(n/total, fill = issue)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0005) +
facet_wrap(~issue, ncol = 2, scales = "free_y")
getwd()
setwd("/Volumes/Samsung_T5/uu_job/workshops/workshop-text-mining-rsa")
setwd("/Volumes/Samsung_T5/uu_job/workshops/workshop-text-mining-rsa/book")
getwd()
View(bigram_tf_idf)
getwd()
getwd()
